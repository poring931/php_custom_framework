version: '3.9'

services:
  nginx:
    build:
      context: .docker/nginx
    container_name: nginx
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www/html
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./.docker/nginx/conf.d:/etc/nginx/conf.d
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - php
    networks:
      - default

  php:
    build:
      context: .docker/php
    container_name: php
    environment:
      XDEBUG_MODE: debug
      XDEBUG_CONFIG: remote_host=${XDEBUG_REMOTE_HOST}
    volumes:
      - ./:/var/www/html
      - ./.docker/php/conf.d/php.ini:/usr/local/etc/php/php.ini
      - ./.docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    expose:
      - "9000"
    networks:
      - default
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./.docker/mysql/init.sql:/.docker-entrypoint-initdb.d/init.sql
      - ./.docker/mysql/data:/var/lib/mysql
      - ./.docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - default

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./:/app
    working_dir: /app
    entrypoint: [ "composer" ]
    networks:
      - default

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - mysql
    networks:
      - default

networks:
  default:
    driver: bridge